{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategoriesSended","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","document","getElementById","placeholder","id","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","console","log","useEffect","then","useFetchGifs","imgs","image","key","GiftExpertApp","categories","setCategories","ReactDOM","render"],"mappings":"+MAIaA,EAAc,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,oBAAuB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OAES,0BAAMC,SAbM,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAoB,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,IACdO,SAASC,eAAe,WAAWC,YAAa,MAQ5C,2BAAOC,GAAG,UACTC,KAAK,OACNC,MAAQb,EACRc,SArBc,SAACX,GACvBF,EAAcE,EAAEY,OAAOF,QAqBfH,YAAc,6B,uBC9BjBM,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAMD,EAAKE,KAAI,SAACC,GAAO,IAAD,EACxB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRiB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,UAAUX,QAVjB,kBAaXM,GAbW,4CAAH,sDCENM,EAAc,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,IAAKS,EAAW,EAAXA,MAC/B,OACI,yBAAKI,UAAW,0CACZ,yBAAKC,IAAOd,EAAKe,IAAON,IACxB,2BAAIA,KCCHO,EAAU,SAAC,GAAe,IAAdlB,EAAa,EAAbA,SAAa,ECFV,SAACA,GAAa,IAAD,EAGXlB,mBAAS,CAC/ByB,KAAM,GACNY,SAAQ,IALyB,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAsCrC,OA/BAC,QAAQC,IAAI,gBAAgBvB,EAAU,IAAKoB,EAAMD,SAGjDK,qBAAU,WACNzB,EAAOC,GACFyB,MAAK,SAAAf,GACFY,QAAQC,IAAIb,GACZW,EACI,CACId,KAAMG,EACNS,SAAQ,OAOxBG,QAAQC,IAAI,wBACZD,QAAQC,IAAI,oCAAqCvB,KACnD,CAACA,IAYIoB,EDlCqBM,CAAa1B,GAA7B2B,EAFsB,EAE3BpB,KAAUY,EAFiB,EAEjBA,QAUjB,OATAG,QAAQC,IAAIJ,GASL,oCACC,4BAAKnB,GAEL,yBAAKe,UAAY,aACbI,GAAW,yCAEXQ,EAAKlB,KAAI,SAAAmB,GAAK,OACN,kBAAC,EAAD,eACIC,IAAOD,EAAMlC,IAERkC,UExBpBE,EAAgB,WAAK,MAGMhD,mBAAS,CAAC,cAHhB,mBAGvBiD,EAHuB,KAGXC,EAHW,KAU9B,OAAO,oCACH,+CACA,kBAAC,EAAD,CAAanD,oBAAuBmD,IACpC,6BACA,4BACKD,EAAWtB,KAAI,SAAAT,GACb,OAAO,kBAAC,EAAD,CACF6B,IAAK7B,EACLA,SAAYA,UCfhCiC,IAASC,OACL,kBAAC,EAAD,MAEF3C,SAASC,eAAe,U","file":"static/js/main.e322db69.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategoriesSended})=>{\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        //si yo quitara el e.preventDefault renderizaria denuevo este componente tmb\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategoriesSended(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n            document.getElementById('entrada').placeholder= '';\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n    \r\n             <form onSubmit = {handleSubmit}>\r\n                <input id=\"entrada\"\r\n                 type='text'\r\n                value ={inputValue}\r\n                onChange = {handleInputChange}\r\n                placeholder = 'Inserte categoria aqui'\r\n                ></input>\r\n             </form>\r\n    )\r\n\r\n   \r\n}\r\nAddCategory.propTypes = {\r\n    setCategoriesSended: PropTypes.func.isRequired\r\n}","export const getGif = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kztVQeoR1Z6EXgKaGv3LANBUdCWw391M`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map((img)=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url                \r\n        }\r\n    })\r\n    return gif;\r\n    //retorna una promesa por ser async\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {url, title}) => {\r\n    return (\r\n        <div className =\"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//CON PROPS\r\n// export const GifGridItem = ( props) => {\r\n//     return (\r\n//         <div className =\"card\">\r\n//             <img src = {props.image.url} alt = {props.image.title}></img>\r\n//             <p>{props.image.title}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n//DESESTRUCTURANDO EL PROPS\r\n// export const GifGridItem = ( {image}) => {\r\n//     return (\r\n//         <div className =\"card\">\r\n//             <img src = {image.url} alt = {image.title}></img>\r\n//             <p>{image.title}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n","\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import React, { useEffect, useState } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGif} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({category}) =>{\r\n\r\n    const {data:imgs,loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n    // const [imgs, setImgs] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     getGif(category)\r\n    //         .then(img => setImgs(img));\r\n    // },[category])\r\n\r\n\r\n    return <>\r\n            <h2>{category}</h2>\r\n    \r\n            <div className = \"card-grid\">\r\n               {loading && <p>Loading...</p>}\r\n                {\r\n                imgs.map(image =>(\r\n                        <GifGridItem\r\n                            key = {image.id}\r\n                            //le estoy pasando las propiedades de cada elemento\r\n                             {...image}\r\n\r\n                            //CON PROPS\r\n                            // image = {image}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n    \r\n            </>\r\n\r\n}","import { useState ,  useEffect} from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    })\r\n    console.log('loading de : ',category, ' ', state.loading);\r\n    \r\n    //useEffect se activa una vez q el elemento se haya renderizado\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(img =>{\r\n                console.log(img);\r\n                setState(\r\n                    {\r\n                        data: img,\r\n                        loading:false\r\n                    }\r\n                    )\r\n                    \r\n                \r\n               \r\n            })\r\n        console.log('se ejecuto use Efect');\r\n        console.log('se ejecuto use Efect vcategoria: ' ,category);\r\n    },[category])\r\n\r\n    // setTimeout(()=>{\r\n    //     setState( state=> {\r\n    //         return({data:[1,2],\r\n    //             loading: !state.loading})           \r\n    //     }\r\n    //     )\r\n    // }, 3000);\r\n    \r\n    \r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GiftExpertApp = () =>{\r\n    \r\n    // const categories = ['One Punch', 'Samurai X', 'Goku'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     //setcategories([...categories,'ToraDora']);\r\n    //     setCategories(cats =>{return [...categories,'ToraDora']});\r\n    // };\r\n\r\n    return <> \r\n        <h2>Gift Expert App</h2>\r\n        <AddCategory setCategoriesSended = {setCategories}/>\r\n        <hr></hr>\r\n        <ol>\r\n            {categories.map(category =>{\r\n               return <GifGrid\r\n                    key={category}\r\n                    category = {category}\r\n               />\r\n            })}\r\n        </ol>\r\n    </>\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport {GiftExpertApp} from './GiftExpertApp'\n\n\n\nReactDOM.render(\n    <GiftExpertApp/>,\n    //<App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}